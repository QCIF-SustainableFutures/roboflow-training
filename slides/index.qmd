---
title: "A Masterclass on Roboflow and Computer Vision"
format: clean-revealjs
html-math-method:
  method: mathjax
  url: "https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"
author:
  - name: Dr Sebastian Lopez Marcano
    orcid: 0000-0002-0814-2906
    email: s.lopezmarcano@qcif.edu.au
    affiliations: QCIF
date: last-modified
---

# Introduction to Computer Vision Workflows

## Modules Overview

- **Module 1**: AI, Deep Learning, and Computer Vision
- **Module 2**: The entire computer vision workflow

---

# Module 1: AI - DL - CV
:::: {.columns}

::: {.column width="40%"}
![A visual representation of AI, Deep Learning, and Computer Vision](assets/1-s2.0-S0886779820306313-gr4.jpg)
:::

::: {.column width="60%"}
**What is Deep Learning?**

- A subset of Machine Learning to train neural networks and make predictions

**What is Computer Vision?**

- A field of AI that enables computers to interpret and understand visual information
- Key applications: classification, object detection and segmentation
:::

::::

## Computer vision tasks
- **Image Classification**: Assigns a label to an entire image (e.g., "cat", "dog")
- **Object Detection**: Identifies and localizes multiple objects within an image (e.g., "cat" at (x,y) coordinates, "dog" at (x,y) coordinates)

## Image Classification vs Object Detection

![](assets/img-classification_detection.png)

# Module 2: The entire computer vision workflow 

## Key Steps *✨<span style="color:purple;">with the Roboflow sparkle</span>✨*

- Objective and infrastructure
- Data collection and pre-processing
- <span style="color:purple;">Create account and project</span>
- Data splitting
- <span style="color:purple;">Data upload</span>
- <span style="color:purple;">Data annotation</span>
- <span style="color:purple;">Model training📝</span>
- <span style="color:purple;">Model evaluation📝</span>
- <span style="color:purple;">Model inference📝</span> 
- Post-processing

## Objective and Infrastructure
- **Objective**: Define the problem you want to solve (e.g., species identification, behavior analysis)
  - How many classes?
  - What is the expected accuracy?
  - What is the long-term goal? 
- **Infrastructure**: Determine the hardware and software requirements for your project
  - GPU/CPU requirements
  - Storage capacity

## Data collection and pre-processing

- **Data Collection**: Gathering images from various sources (e.g., camera trap deployment, public datasets, web scraping)
- **Data Pre-processing**: Cleaning and preparing data for further analysis
  - Rename files 
  - Move files to appropriate folders

## <span style="color:purple;">Create account and project</span>
- Create a Roboflow account
- Create a new project

## Data Splitting Part 1
- Model development dataset
    - Model training (e.g., 70% of data)
    - Model validation (e.g., 10% of data)
    - Model evaluation dataset (e.g., 20% of data)
- Inference dataset

Depending on the dataset size, model development can be between 10-20% of the total dataset.


## Data Splitting Part 2 : Broad types of data selection
- General Computer Vision: Random selection
- Environmental Computer Vision: Targeted selection

::: {.callout-tip}
The higher the variability in the model development dataset, the better the model will perform in the field.
:::

::: {.callout-important}
The data splitting process is crucial and takes time. 
::: 


## Data Splitting Part 3: Selecting training / validation / eval 
- **Training**: Used to train the model - 70% of model development data
- **Validation**: Used to tune hyperparameters and prevent overfitting - 10% of model development data
- **Evaluation**: Used to assess the model's performance on unseen data - 20% of data of model development

## Data Splitting Part 4: Importance of metadata

:::: {.columns}
::: {.column width="33%"}
- Model trained on images from 🏖️ will not be accurate when applied to 🏞️
:::
::: {.column width="33%"}
- Model trained on images collected during ☀️ hours will not be accurate when applied to images collected at 🌝
:::
::: {.column width="33%"}
- For a single location, a model trained on images collected in `year 1` will not be *accurate* when applied to images collected in `year 2`
:::
::::

---

# Module 3: Training, Evaluation, and Predictions

## Recap Steps *✨<span style="color:purple;">with the Roboflow sparkle</span>✨*

- Objective and infrastructure ✅
- Data collection and pre-processing ✅
- <span style="color:purple;">Create account and project</span> ✅
- Data splitting ✅
- <span style="color:purple;">Data upload</span> 👈🏼
- <span style="color:purple;">Data annotation</span>
- <span style="color:purple;">Model training📝</span>
- <span style="color:purple;">Model evaluation📝</span>
- <span style="color:purple;">Model inference📝</span> 
- Post-processing


## Data upload

## Data annotation part 1
![Annotation types](assets/annotation_types.png)

## Data annotation part 2
- 

## Performance Metrics

- **Precision / Recall / F1 Score**
- **Mean Average Precision (mAP50)**
- **False Positives / False Negatives**

---

# Module 4: Platforms for Computer Vision Development

## Key Platforms

- Cloud-based solutions
- On-premise GPU clusters
- Open-source toolkits

## Deployment Considerations

- Model hosting
- API integration
- Performance monitoring

---

# Post-processing Techniques

## Confidence Thresholding

- Filter detections based on confidence scores
- Class-specific filtering

## Tracking and Non-Maximum Suppression (NMS)

- Reduce redundant detections
- Maintain object identity across frames

## Data Outputs

- Object counts
- Visualisations (heatmaps, tracking paths)
- Statistical summaries & reports
